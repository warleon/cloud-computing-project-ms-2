version: "3.9"

services:
  ms2_postgres:
    image: postgres:15
    container_name: ms2_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ms2
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: ms2_accounts
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ms-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ms2 -d ms2_accounts"]
      interval: 10s
      timeout: 5s
      retries: 5

  ms2_service:
    build: .
    container_name: ms2_service
    restart: unless-stopped
    depends_on:
      ms2_postgres:
        condition: service_healthy
    environment:
      DB_HOST: ms2_postgres
      DB_PORT: 5432
      DB_NAME: ms2_accounts
      DB_USER: ms2
      DB_PASSWORD: secret

      MS1_BASE_URL: http://ms1-customer-service:3000/api
      MS1_VALIDATE: "true"
      MS1_TIMEOUT: 3

      ALLOWED_ORIGINS: http://localhost:3000,http://34.192.101.95
      SERVICE_KEY_FOR_MS3: changeme
      APP_PORT: 8080
      PYTHONUNBUFFERED: 1
    ports:
      - "8080:8080"
    networks:
      - ms-network

networks:
  ms-network:
    external: true

volumes:
  postgres_data:
    driver: local
